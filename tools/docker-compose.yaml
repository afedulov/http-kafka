################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################
version: "2.1"

services:

  ###############################################################
  #    StateFun runtime
  ###############################################################

  statefun-manager:
    image: apache/flink-statefun:3.0.0
    expose:
      - "6123"
    ports:
      - "8081:8081"
    environment:
      ROLE: master
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/http-kafka/module.yaml

  statefun-worker:
    image: apache/flink-statefun:3.0.0
    expose:
      - "6121"
      - "6122"
    environment:
      ROLE: worker
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/http-kafka/module.yaml

  ###############################################################
  #    Kafka for ingress and egress
  ###############################################################

  ### Zookeeper ###
  zoo:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
      # volumes:
      # - ./persistent_volumes/zoo1/data:/data
      # - ./persistent_volumes/zoo1/datalog:/datalog
  #    networks:
  #      - kafka-cluster

  ### Kafka ###
  kafka:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # volumes:
      # - ./persistent_volumes/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo

  ###############################################################
  # Forward a port 8000 from the host's machine
  ###############################################################

#  host-machine:
#    image: qoomon/docker-host@sha256:e0f021dd77c7c26d37b825ab2cbf73cd0a77ca993417da80a14192cb041937b0
#    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
#    mem_limit: 8M
#    restart: on-failure
#    environment:
#      PORTS: 8000


  remote-function:
    image: remote-function:latest
    hostname: remote-function
    ports:
      - "8000:8000"